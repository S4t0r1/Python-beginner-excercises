import sys, random

def build_gameboard():
    board = []
    for i in range(3):
        board_row = [(' ') for e in range(3)]
        board.append(board_row)
    return board

def ask_player():
    player = input("Player, please choose your coordinates[num,num](1=min,3=max).").split(',')
    return player

def player_symbol(player):
    player = 'x'
    return player

def ai_symbol(ai):
    ai = 'o'
    return ai

def used_spot(board,n,m):
    if board[n][m] == 'x' or board[n][m] == 'o':
        return True

def used_spot_ai(board,row,col):
    if board[row][col] == 'x' or board[row][col] == 'o':
        return True

def ai_move(board,player,ai):
    if ai != player:
        if player == board[1][1]:
            ai_field = board[0][0], board[0][2], board[2][0], board[2][2]
            ai = random.choice(ai_field)
        elif player == board[0][0] or player == board[0][2]                 \
        or player == board[2][0] or player == board[2][2]:
            ai = board[1][1]
    return board[1][1]
        
def check_win(board,n,m):
        row_w = len([board[n][m] for e in board[n] if e == board[n][m]])
        col_w = len([board[i][m] for i in range(3) if board[i][m] == board[n][m]])
        diag1_w = len([board[i][i] for i in range(3) if board[i][i] == board[n][m]])
        diag2_w = len([board[i][2 - i] for i in range(3) if board[i][2 - i] == board[n][m]])
        if row_w == 3 or col_w == 3 or diag1_w == 3 or diag2_w == 3:
            if board[n][m] == 'x':
                print ('\n'+"*** PLAYER_1 WINS! ***")
            return True

def check_win_ai(board,row,col):
        row_w = len([board[row][col] for e in board[row] if e == board[row][col]])
        col_w = len([board[i][col] for i in range(3) if board[i][col] == board[row][col]])
        diag1_w = len([board[i][i] for i in range(3) if board[i][i] == board[row][col]])
        diag2_w = len([board[i][2 - i] for i in range(3) if board[i][2 - i] == board[row][col]])
        if row_w == 3 or col_w == 3 or diag1_w == 3 or diag2_w == 3:
            if board[row][col] == 'o':
                print ('\n'+"*** PLAYER_2 WINS! ***")
            return True

def play_again(win,txt):
    if win == True:
        txt = ("%s congratulations!\n" % txt)
        repeat = input(txt + "\nDo you want to play again? If yes type Y/y/yes, if not, type anything else: ")
        if repeat.lower() == "y" or repeat.lower() == "yes":
            return True

def printings(board,p1_score,p2_score): #for the sake of sugar in main, gameboard display and round scores..
    print('\n',*board, sep='\n')
    print('\n'+'(p1)',p1_score,':',p2_score,'(p2)','\n')

# Here we go! **********************************************************************************************

def main():
    player = 'x'
    ai = 'o'
    p1_score = 0
    p2_score = 0
    txt = ""
    board = build_gameboard()
    
    while True:
        win = None
        printings(board,p1_score,p2_score)
        while True:
            player = ask_player()
            n = int(player[0]) - 1
            m = int(player[1]) - 1
            if used_spot(board,n,m) is not True:
                board[n][m] = player_symbol(player)
                break
            else:
                print("spot taken...")
            
        while True:
            row = random.randint(0,2)
            col = random.randint(0,2)
            if used_spot_ai(board,row,col) is not True:
                ai_move(board,player,ai)
                board[row][col] = ai_symbol(ai)
                print("Ai..")
                break
        
        if check_win(board,n,m) == True or check_win_ai(board,row,col) == True:
            printings(board,p1_score,p2_score)
            win = True
            if board[n][m] == 'x':
                p1_score += 1
            else:
                p2_score += 1
            if play_again(win,txt) == True:
                board = build_gameboard()
                continue
            else:
                print("\nGame over!")  
                break

main()
