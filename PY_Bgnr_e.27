# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Excercise n.27 from the python begginer excercises on:
# http://www.practicepython.org/solution/2016/03/17/27-tic-tac-toe-draw-solutions.html
# I approched this one for the sake of an experiment and
# managed to establish the whole Tic Tac Toe game into one function..
# Additional features like error and exception handling and player score 
# will be using a new function..
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# This function can applied to any gameboard size by applying the following values:
# range(3), 3 -> range(num_wsh=number of intended square shape gameboard size, must be an int!), num_wsh
# 9 -> num_wsh ** 2
# 2 -> len(row) - 1

def playfield():
    board = []
    for i in range(3):
        row = [(' ') for e in range(3)]
        board.append(row)
    print (*board, sep='\n')
    
    txt = "Hello PLAYER_1! "
    p1 = 'x'
    p2 = 'o'
    move = 0
    
    while True:
         if move == 9:
            print (*board, sep='\n')
            repeat = input("Its a tie! Do you want to play again? If yes type Y/y/yes, if not, type anything else")
            if repeat.lower() == "y" or repeat.lower() == "yes":
              playfield()
            else:
                break
        
        player = input(txt + "Please choose your coordinates[num,num](1=min,3=max).")
        player = player.split(',')
        n = int(player[0]) - 1
        m = int(player[1]) - 1
        
        if board[n][m] != p1 and board[n][m] != p2:
            move += 1
            if move % 2 != 0:
                board[n][m] = p1
                txt = "PLAYER_2, "
            else:
                board[n][m] = p2
                txt = "PLAYER_1, "
        else:
            print ("Spot taken. ")
        
        row_w = len([board[n][m] for e in board[n] if e == board[n][m]])
        col_w = len([board[i][m] for i in range(3) if board[i][m] == board[n][m]])
        diag1_w = len([board[i][i] for i in range(3) if board[i][i] == board[n][m]])
        diag2_w = len([board[i][2 - i] for i in range(3) if board[i][2 - i] == board[n][m]])
        
        if row_w == 3 or col_w == 3 or diag1_w == 3 or diag2_w == 3:
            print (*board, sep='\n')
            if board[n][m] == p1:
                print ("P1 WINS!")
            else:
                print ("P2 WINS!")
            break
        
        print (*board, sep='\n')
        print (move)

print (playfield())
